sudo: required ##super user permission
services:
  - docker
before_install:
  - docker build -t tgbkrkmz/react-test -f ./client/Dockerfile.dev ./client #we only have tests for react project, we could easily add tests for server and worker
script:
  - docker run -e CI=true tgbkrkmz/react-test npm run test  ##e Set environment variables and start test
after_success:
  - docker build -t tgbkrkmz/multi-client ./client
  - docker build -t tgbkrkmz/multi-nginx ./nginx
  - docker build -t tgbkrkmz/multi-server ./server
  - docker build -t tgbkrkmz/multi-worker ./worker
  #Login to the docker CLI
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
  #Take those images and push them to docker hub
  - docker push tgbkrkmz/multi-client
  - docker push tgbkrkmz/multi-nginx
  - docker push tgbkrkmz/multi-server
  - docker push tgbkrkmz/multi-worker
deploy:
  provider: elasticbeanstalk
  region: "us-east-1" #http://dockerreact2-env.eba-iuf62dhd.us-east-1.elasticbeanstalk.com/
  app: "multi-docker2"
  env: "Multidocker2-env-2"
  bucket_name: "elasticbeanstalk-us-east-1-000215741983" ## from s3 storage created with ebs on AWS
  bucket_path: "multi-docker2" # equals to appname
  on:
    branch: master ##whoch branch to be deployed
  access_key_id: $AWS_ACCESS_KEY # from IAM Management console add user and set on travis CI env variables
  secret_access_key: $AWS_SECRET_KEY # from IAM Management console add user and set on travis CI env variables
